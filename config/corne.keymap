#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 17 16 15 13 14 1 2 3 4 5 12 24 25 26 27 28 29 36 37 38>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };

        i_tilde_b: i_tilde_b {
            compatible = "zmk,behavior-tap-dance";
            label = "I_TILDE_B";
            #binding-cells = <0>;
            bindings = <&kp I>, <&i_tilde>;

            tapping-term-ms = <250>;
        };

        a_tilde_b: a_tilde_b {
            compatible = "zmk,behavior-tap-dance";
            label = "A_TILDE_B";
            #binding-cells = <0>;
            bindings = <&kp A>, <&a_tilde>;

            tapping-term-ms = <250>;
        };

        e_tilde_b: e_tilde_b {
            compatible = "zmk,behavior-tap-dance";
            label = "E_TILDE_B";
            #binding-cells = <0>;
            bindings = <&kp E>, <&e_tilde>;

            tapping-term-ms = <250>;
        };

        o_tilde_b: o_tilde_b {
            compatible = "zmk,behavior-tap-dance";
            label = "O_TILDE_B";
            #binding-cells = <0>;
            bindings = <&kp O>, <&o_tilde>;

            tapping-term-ms = <250>;
        };

        u_tilde_b: u_tilde_b {
            compatible = "zmk,behavior-tap-dance";
            label = "U_TILDE_B";
            #binding-cells = <0>;
            bindings = <&kp U>, <&u_tilde>;

            tapping-term-ms = <250>;
        };

        n_tilde_b: n_tilde_b {
            compatible = "zmk,behavior-tap-dance";
            label = "N_TILDE_B";
            #binding-cells = <0>;
            bindings = <&kp N>, <&n_tilde>;

            tapping-term-ms = <250>;
        };
    };

    combos {
        compatible = "zmk,combos";

        OpenParenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        OpenBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <18 19>;
        };

        OpenBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
        };

        CloseParenthasis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 7>;
        };

        CloseBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <19 20>;
        };

        CloseBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32>;
        };

        admin_layer_tog {
            bindings = <&sl 4>;
            key-positions = <41 36>;
        };

        grater_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <25 26>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <24 25>;
        };
    };

    macros {
        a_tilde: a_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E) &kp A>;
            label = "A_TILDE";
        };

        e_tilde: e_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E) &kp E>;
            label = "E_TILDE";
        };

        i_tilde: i_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E) &kp I>;
            label = "I_TILDE";
        };

        o_tilde: o_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E) &kp O>;
            label = "O_TILDE";
        };

        u_tilde: u_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E) &kp U>;
            label = "U_TILDE";
        };

        n_tilde: n_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N) &kp N>;
            label = "N_TILDE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB      &kp Q       &kp W         &e_tilde_b       &kp R              &kp T        &kp Y       &u_tilde_b          &i_tilde_b        &o_tilde_b    &kp P         &kp BSPC
&mt STAR AT  &a_tilde_b  &hml LCTRL S  &hml LEFT_GUI D  &hml LEFT_SHIFT F  &kp G        &kp H       &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &hmr RCTRL L  &kp COLON     &kp EXCL
&kp HASH     &kp Z       &kp X         &kp C            &kp V              &kp B        &n_tilde_b  &kp M               &kp COMMA         &kp DOT       &kp QUESTION  &kp ESC
                                       &trans           &tog 3             &kp SPACE    &kp ENTER   &tog 1              &sl 2
            >;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp N7  &kp N8  &kp N9  &kp PLUS   &kp STAR   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N4  &kp N5  &kp N6  &kp MINUS  &kp SLASH  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N1  &kp N2  &kp N3  &kp N0     &kp EQUAL  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        symbols_layer {
            bindings = <
&kp TAB    &kp EXCL   &kp AT  &kp HASH  &kp AMPERSAND  &kp PRCNT    &kp CARET  &kp DOLLAR  &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans     &kp F1  &kp F2    &kp F3         &kp F4       &kp MINUS  &kp EQUAL   &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp TILDE  &kp F1  &kp F2    &kp F3         &trans       &kp UNDER  &kp PLUS    &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                              &trans    &trans         &trans       &trans     &trans      &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &kp F1  &kp F2   &kp F3   &trans     &trans          &msc SCRL_DOWN  &msc SCRL_UP  &trans           &trans     &trans
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12    &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT        &kp END    &kp HOME
&trans  &trans  &trans  &trans   &trans   &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp LCLK  &mkp RCLK
                        &trans   &trans   &trans     &trans          &trans          &trans
            >;
        };

        admin_layer {
            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bootloader  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &bootloader
                                         &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};

