#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <0 11>;
        };

        OpenParenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        OpenBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <18 19>;
        };

        OpenBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
        };

        CloseParenthasis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 7>;
        };

        CloseBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <19 20>;
        };

        CloseBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32>;
        };

        LessThan {
            bindings = <&kp LESS_THAN>;
            key-positions = <3 4>;
        };

        GreatherThan {
            bindings = <&kp GREATER_THAN>;
            key-positions = <4 5>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <38 39>;
        };

        a_tilde {
            bindings = <&a_tilde>;
            key-positions = <13 38>;
        };

        e_tilde {
            bindings = <&e_tilde>;
            key-positions = <3 38>;
        };

        i_tilde {
            bindings = <&i_tilde>;
            key-positions = <39 8>;
        };

        o_tilde {
            bindings = <&o_tilde>;
            key-positions = <39 9>;
        };

        u_tilde {
            bindings = <&u_tilde>;
            key-positions = <39 7>;
        };

        n_tilde {
            bindings = <&n_tilde>;
            key-positions = <39 30>;
        };
    };

    macros {
        a_tilde: a_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E) &kp A>;
            label = "A_TILDE";
        };

        e_tilde: e_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E) &kp E>;
            label = "E_TILDE";
        };

        i_tilde: i_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E) &kp I>;
            label = "I_TILDE";
        };

        o_tilde: o_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E) &kp O>;
            label = "O_TILDE";
        };

        u_tilde: u_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(E) &kp U>;
            label = "U_TILDE";
        };

        n_tilde: n_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N) &kp N>;
            label = "N_TILDE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB         &kp Q  &kp W        &kp E     &kp R         &kp T        &kp Y      &kp U  &kp I          &kp O                  &kp P          &kp BSPC
&kp LEFT_SHIFT  &kp A  &mt LCTRL S  &kp D     &kp F         &kp G        &kp H      &kp J  &kp K          &mt RCTRL L            &kp SEMI       &kp ENTER
&kp LCTRL       &kp Z  &kp X        &kp C     &kp V         &kp B        &kp N      &kp M  &mt COMMA DOT  &mt SQT DOUBLE_QUOTES  &mt STAR FSLH  &kp ESC
                                    &kp LGUI  &kp LEFT_ALT  &kp SPACE    &kp SPACE  &mo 2  &mo 1
            >;
        };

        lower_layer {
            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans       &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0  &trans
&trans       &trans        &trans        &kp UP        &trans        &trans       &trans     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&bootloader  &trans        &kp LEFT      &kp DOWN      &kp RIGHT     &trans       &trans     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans  &bootloader
                                         &trans        &trans        &kp SPACE    &kp SPACE  &trans        &trans
            >;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp EXCL    &kp AT             &kp HASH         &kp AMPERSAND  &kp PRCNT           &kp CARET  &kp DOLLAR  &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp LESS_THAN  &kp GREATER_THAN    &kp MINUS  &kp EQUAL   &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp TILDE   &a_tilde           &trans           &trans         &trans              &kp UNDER  &kp PLUS    &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                          &kp LGUI         &trans         &kp SPACE           &kp SPACE  &trans      &kp RALT
            >;
        };
    };
};

